---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: {{ .Values.app.name }}-run-pipeline
spec:
  params:
  - name: source_repo_url
    description: source repo that contains the application code
  - name: source_repo_name
    description: source repo that contains the application code

  - name: source_git_revision
    description: source branch to build from
    
  - name: maven_mirror_url

  - name: sonarqube_host_url
    
  - name: sonarqube_project_key
    
  - name: sonarqube_project_secret

  - name: tls_verify
    
  - name: git_ref
    
  - name: commit_date
    
  - name: commit_author
    
  - name: commit_message
    
  - name: image_repo

  - name: image_test_repo
    
  - name: image_tag

  - name: cyclonedx_host_url

  - name: release_dev_helm_dir

  - name: release_dev_values_file

  - name: release_test_helm_dir

  - name: release_test_values_file

  - name: gitops_repo_url

  - name: gitops_target_branch
    
  resourcetemplates:
    - apiVersion: tekton.dev/v1beta1
      kind: PipelineRun
      metadata:
        name: $(uid)
        generateName: {{ .Values.app.name }}-
        labels:
          backstage.io/kubernetes-id: ${{values.component_id}}
      spec:
        params:
          - name: source_repo_url
            value: "{{ .Values.git.repo }}"
          - name: source_repo_name
            value: "{{ .Values.git.name}}"
          - name: source_git_revision
            value: $(tt.params.source_git_revision)
          - name: maven_mirror_url
            value: $(tt.params.maven_mirror_url)
          - name: sonarqube_host_url
            value: $(tt.params.sonarqube_host_url)
          - name: sonarqube_project_key
            value: "{{ .Values.git.name}}"
          - name: sonarqube_project_secret
            value: sonarqube-access-token
          - name: tls_verify
            value: true
          - name: git_ref
            value: $(tt.params.git_ref)
          - name: commit_date
            value: $(tt.params.commit_date)
          - name: commit_author
            value: $(tt.params.commit_author)
          - name: commit_message
            value: $(tt.params.commit_message)
          - name: image_repo
            # value: $(tt.params.image_repo)
            value: {{ .Values.image.host }}/{{ .Values.image.name }}
          - name: image_test_repo
            value: $(tt.params.image_test_repo)
          - name: image_tag
            value: $(tt.params.git_ref)-$(tt.params.source_git_revision)
          - name: cyclonedx_host_url
            value: $(tt.params.cyclonedx_host_url)
          - name: release_dev_helm_dir
            value: {{ .Values.release.dev.helm_dir }}
          - name: release_dev_values_file
            value: {{ .Values.release.dev.values_file }}
          - name: release_test_helm_dir
            value: {{ .Values.release.test.helm_dir }}
          - name: release_test_values_file
            value: {{ .Values.release.test.values_file }}
          - name: gitops_repo_url
            value: {{ .Values.git.gitops_repo }}
          - name: gitops_target_branch
            value: {{ .Values.git.gitops_branch }}

        pipelineRef:
          name: '{{.Values.git.name}}-pipeline'
        serviceAccountName: pipeline
        timeout: 1h0m0s
        workspaces:
        # Static pvc for better build performance
          # - name: workspace
          #   persistentVolumeClaim:
          #     claimName: "{{.Values.git.name}}-build-pvc"
          # - name: maven-settings
          #   emptyDir: {}
          # - name: maven-local-repo
          #   persistentVolumeClaim:
          #     claimName: "{{.Values.git.name}}-m2repo-pvc"
          - name: workspace
            volumeClaimTemplate:
              spec:
                accessModes:
                  - ReadWriteOnce
                resources:
                  requests:
                    storage: 1Gi
          - name: maven-settings
            volumeClaimTemplate:
              spec:
                accessModes:
                  - ReadWriteOnce
                resources:
                  requests:
                    storage: 2Gi
            # emptyDir: {}
          - name: gitcredential
            secret:
              secretName: '{{.Values.git.name}}-github-pat'
          - name: secrets
            secret:
              secretName: gpg-public-key
